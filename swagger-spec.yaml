swagger: '2.0'
info:
  description: A API driven product management system to facilitate easy retrieval of relevant items, updation of product tags, price etc.
  version: 0.0.3
  title: Product Management System
  contact:
    email: harshseth2006@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:3000'
basePath: /
tags:
  - name: Category Details
    description: Add, Modify and Remove Categories
  - name: Product Details
    description: Add, Modify and Remove Products
  - name: Search
    description: Search the catalog for products via relevant queries 
  - name: Utils
    description: Helper endpoints which reveal or modify the state of the system
  - name: Misc
    description: Endpoints with no functional significance, but lots of semantic significance
schemes:
  - http
produces:
  - "application/json"
paths:
  /:
    get:
      tags:
        - Misc
      summary: Get a list of valid endpoints
      description: An aid to fetch a list of all accessible endpoints
      operationId: GetEndPointList
      responses:
        '200': 
          description: List of all endpoints
          schema:
            type: object
            properties:
              listOfEndpoints:
                type: array
                items:
                  type: string
  /swagger:
    get:
      tags:
        - Misc
      summary: Get a copy of this swagger spec sheet
      description: Download a copy of this spec sheet to load it in a viewer for your development convenience
      operationId: GetSwaggerSpecs
      produces: 
        - text/yaml
      responses:
        '200':
          description: Returns .yaml Swagger spec sheet
          schema:
            type: file
  /category:
    post:
      tags:
        - Category Details
      summary: Add a new category
      description: Add a new category of products to database
      operationId: CreateCategory
      parameters:
        - name: body
          in: body
          description: Details of the new category
          required: true
          schema:
            $ref: '#/definitions/Category'
            required:
              - categoryID
              - name
      responses:
        '200':
          description: Category was added successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '400':
          description: An error while creating new category
          schema:
            $ref: '#/definitions/MessageResponse'
    put:
      tags:
        - Category Details
      summary: Update an existing category
      description: Request body must contain the category ID and the details to be updated. To remove parent from a category, set parentCategoryID to -1
      operationId: UpdateCategory
      parameters:
        - name: body
          in: body
          description: Details of the category to be updated
          required: true
          schema:
            $ref: '#/definitions/Category'
            required:
              - categoryID
      responses:
        '200':
          description: Category was updated successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '404':
          description: No such category exists with the provided category ID
          schema:
            $ref: '#/definitions/MessageResponse'
        '400':
          description: An error occured with updating the category
          schema:
            $ref: '#/definitions/MessageResponse'
  /category/{categoryID}:
    get:
      tags:
        - Category Details
      summary: Get the details of a category
      description: Fetch all the details of a category
      operationId: GetCategory
      parameters:
        - name: categoryID
          in: path
          description: Unique ID of the requested category
          required: true
          type: integer
      responses:
        '200':
          description: Returns a JSON object with details of a category
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Category ID requested does not exist
          schema:
            $ref: '#/definitions/MessageResponse'
        '400':
          description: A valid category ID was not sent along with the request
          schema:
            $ref: '#/definitions/MessageResponse'
    delete:
      tags:
        - Category Details
      summary: Delete an existing category
      description: Remove a category, all subcategories of the category and the products associated to them
      operationId: DeleteCategory
      parameters:
      - name: categoryID
        in: path
        description: Unique ID of the category to be deleted
        required: true
        type: integer
      responses:
        '200':
          description: Successfully deleted the category and all of its children
          schema:
            $ref: '#/definitions/MessageResponse'
  /*:
    get:
      tags: 
        - Misc
      summary: Any invalid URL
      description: Any URL which doesn't match the above paths will be handled by this
      operationId: GetInvalidURL
      responses: 
        '404':
          description: Resource not found
          schema:
            $ref: "#/definitions/MessageResponse"
    post: 
      tags:
        - Misc
      summary: Any invalid URL
      description: Any URL which doesn't match the above paths will be handled by this
      operationId: PostInvalidURL
      responses:
        '404':
          description: Resource not found
          schema: 
            $ref: "#/definitions/MessageResponse"         
definitions:
  Product:
    type: object
    properties:
      productSKU:
        description: Unique Identifier for the Product
        type: integer
        example: 1
      name:
        description: Name of the Product
        type: string
        example: "Ballpoint Pen"
      categoryID:
        description: ID of the category product belongs to
        type: integer
        example: 2
      keywords:
        description: An array of keywords to facilitate searching 
        type: array
        items: 
          type: string
      brand:
        description: Name of the brand
        type: string
        example: "Qazwer Corp."
      color:
        description: Color of the item
        type: string
        example: "red"
      modeOfSale:
        description: Mode of the sales
        type: string
        example: online
        enum:
          - online
          - offline
          - both
      basePrice:
        description: Base selling price of the item
        type: number
        example: 42
        minimum: 0
      taxCategoryID:
        description: Tax Category ID number for GST calculation
        type: integer
        example: 1
      imageURLs:
        description: An array of URLs where the images of the product are hosted
        type: array
        items:
          type: string
      stock:
        description: The current number of items available in stock
        type: integer
        example: 200
        minimum: 0
      status:
        description: Current status of the product (if available for purchasing)
        type: string
        example: live
        enum:
          - live
          - draft
  Category:
    type: object
    properties:
      categoryID:
        description: Unique Identifier for the Category
        type: integer
        example: 1
      name:
        description: Name of the Category
        type: string
        example: "Writing Tools"
      parentCategoryID:
        description: Category ID of its parent category. Leave blank for no parent
        type: integer
  MessageResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
